// Code generated by protoc-gen-js-fetch.
// DO NOT EDIT!

import * as apipb_messages from "./messages.pb";

export type CatalogListRequestListStatus =  "BOTH"  | "ONLY_DRAFT"  | "ONLY_APPROVED" ;
export const CatalogListRequestListStatus_BOTH: CatalogListRequestListStatus = "BOTH";
export const CatalogListRequestListStatus_ONLY_DRAFT: CatalogListRequestListStatus = "ONLY_DRAFT";
export const CatalogListRequestListStatus_ONLY_APPROVED: CatalogListRequestListStatus = "ONLY_APPROVED";

export type CatalogCategory =  "NONE"  | "FEATURED"  | "NEW"  | "RECOMMENDATION"  | "POPULAR"  | "RECENTLY_UPDATED" ;
export const CatalogCategory_NONE: CatalogCategory = "NONE";
export const CatalogCategory_FEATURED: CatalogCategory = "FEATURED";
export const CatalogCategory_NEW: CatalogCategory = "NEW";
export const CatalogCategory_RECOMMENDATION: CatalogCategory = "RECOMMENDATION";
export const CatalogCategory_POPULAR: CatalogCategory = "POPULAR";
export const CatalogCategory_RECENTLY_UPDATED: CatalogCategory = "RECENTLY_UPDATED";

export type CatalogStatus =  "DRAFT"  | "APPROVED" ;
export const CatalogStatus_DRAFT: CatalogStatus = "DRAFT";
export const CatalogStatus_APPROVED: CatalogStatus = "APPROVED";

export interface CatalogItem {
  gameId?: string;
  category?: CatalogCategory;
  index?: number;
}

export interface Catalog {
  title?: string;
  createdAt?: string|number;
  visibleAt?: string|number;
  expiresAt?: string|number;
  status?: CatalogStatus;
  items?: CatalogItem[];
}

/**
Request-Response
*/
export interface CatalogPullRequest {
  profileId?: string;
  clientVersion?: string;
}

export interface CatalogListRequest {
  status?: CatalogListRequestListStatus;
  hideExpired?: boolean;
  limit?: number;
  time?: string|number;
  offset?: number;
}

export interface CatalogListResponse {
  catalogs?: Catalog[];
}

export interface CatalogApproveRequest {
  title?: string;
}


// Code generated by protoc-gen-js-fetch.
// DO NOT EDIT!

import * as apipb_models from "./models.pb";

export interface DeviceInfo {
  vendorId?: string;
  clientSdk?: string;
  bundleIdentifier?: string;
  bundleVersion?: string;
  bundleShortVersion?: string;
  deviceType?: string;
  deviceName?: string;
  osName?: string;
  systemVersion?: string;
  languageCode?: string;
  countryCode?: string;
}

export interface GameInfo {
  id?: string;
  version?: string;
  language?: string;
}

/**
Points are represented as latitude-longitude pairs in the E7 representation
(degrees multiplied by 10**7 and rounded to the nearest integer).
Latitudes should be in the range +/- 90 degrees and longitude should be in
the range +/- 180 degrees (inclusive).
*/
export interface Point {
  latitude?: number;
  longitude?: number;
}

export interface Vector3 {
  x?: number;
  y?: number;
  z?: number;
}

export interface MotionData {
  gravity?: Vector3;
  userAcceleration?: Vector3;
  rotationRate?: Vector3;
  attitude?: Vector3;
}

export interface GestureData {
  velocity?: number;
  width?: number;
  height?: number;
  duration?: number;
}

export interface Event {
/**
UserId is profile id or child id
*/
  userId?: string;
/**
Child is secondary id
*/
  childId?: string;
/**
Event the event name
*/
  event?: string;
/**
Timestamp is seconds unix time
*/
  timestamp?: string|number;
/**
Game is the game information
*/
  game?: GameInfo;
/**
Device is device information,
*/
  device?: DeviceInfo;
/**
AppId is the client app id
*/
  appId?: string;
/**
Loc is the location of user
*/
  loc?: Point;
/**
EventId is Client side event id in order to track whether event is delivered successfully
*/
  eventId?: string;
/**
IsResend is true if client is trying to send a failed event
*/
  isResend?: boolean;
/**
Payload is a json data
*/
  payload?: string;
/**
Age is child's age in month
*/
  age?: number;
/**
Child gender
*/
  gender?: apipb_models.Gender;
/**
MotionData keeps motion data of device
*/
  motionData?: MotionData;
  gestureData?: GestureData;
}

export interface AppEventData {
  event?: string;
  appId?: string;
  device?: DeviceInfo;
  timestamp?: string|number;
  payload?: string;
  loc?: Point;
/**
EventId is Client side event id in order to track whether event is delivered successfully
*/
  eventId?: string;
/**
IsResend is true if client is trying to send a failed event
*/
  isResend?: boolean;
/**
UserId is profile id or child id
*/
  userId?: string;
}

export interface BatchEventData {
/**
Event the event name
*/
  event?: string;
/**
EventId is Client side event id in order to track whether event is delivered successfully
*/
  eventId?: string;
/**
Timestamp is seconds unix time
*/
  timestamp?: string|number;
/**
Game is the game information
*/
  game?: GameInfo;
/**
Loc is the location of user
*/
  loc?: Point;
/**
IsResend is true if client is trying to send a failed event
*/
  isResend?: boolean;
/**
Payload is a json data
*/
  payload?: string;
/**
MotionData keeps motion data of device
*/
  motionData?: MotionData;
  gestureData?: GestureData;
}

export interface BatchEvent {
/**
UserId is profile id or child id
*/
  userId?: string;
/**
Child is secondary id
*/
  childId?: string;
/**
AppId is the client app id
*/
  appId?: string;
/**
Device is device information,
*/
  device?: DeviceInfo;
/**
Age is child's age in month
*/
  age?: number;
/**
Child Gender
*/
  gender?: apipb_models.Gender;
/**
Data is
*/
  data?: BatchEventData[];
}

export interface EventResponse {
  eventId?: string;
  success?: boolean;
}

